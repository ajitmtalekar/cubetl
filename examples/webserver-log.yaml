
---

!!python/object:cubetl.olap.OlapMapper
id: cubetl.webserver.request.olapmapper
mappers:
#- !!python/object:cubetl.olap.sql.CompoundHierarchyDimensionMapper
- !!python/object:cubetl.olap.sql.EmbeddedDimensionMapper
  entity: !ref cubetl.webserver.request.datetime
  #table: date
  #connection: !ref example.sql.connection
  eval:
  - name: _cubetl_datetime_date
    value: ${ m['datetime'] }
  mappings:
  - !ref cubetl.datetime.mappings
- !!python/object:cubetl.olap.sql.CompoundHierarchyDimensionMapper
  entity: !ref cubetl.webserver.request.client_country
  table: country
  connection: !ref example.sql.connection
  eval:
  - name: geoip_cont_name
    default: Unknown
  - name: geoip_country_name
    default: Unknown
  - name: geoip_country_code
    default: UNKNOWN
  mappings:
  - !ref cubetl.geo.mappings
- !!python/object:cubetl.olap.sql.CompoundHierarchyDimensionMapper
  entity: !ref cubetl.webserver.request.path
  table: request_path
  connection: !ref example.sql.connection
  lookup_cols: request_path1, request_path2, request_path3, request_path4
  mappings:
  - name: id
    pk: True
  - name: request_path1
    value: ${ m["path1"] }
  - name: request_path2
    value: ${ m["path2"] }
  - name: request_path3
    value: ${ m["path3"] }
  - name: request_path4
    value: ${ m["path4"] }
- !!python/object:cubetl.olap.sql.DimensionMapper
  entity: !ref cubetl.webserver.request.client_address
  table: address
  connection: !ref example.sql.connection
  lookup_cols: address
  mappings:
  - name: id
    pk: True
  - name: address
    value: ${ m["address"] }
    type: String
- !!python/object:cubetl.olap.sql.DimensionMapper
  entity: !ref cubetl.webserver.request.protocol
  table: protocol
  connection: !ref example.sql.connection
  mappings:
  - name: id
    value: ${ text.slugu(m["protocol"]) }
    pk: True
    type: String
  - name: protocol
    value: ${ m["protocol"] }
    type: String
- !!python/object:cubetl.olap.sql.DimensionMapper
  entity: !ref cubetl.webserver.request.method
  table: http_method
  connection: !ref example.sql.connection
  lookup_cols: http_method
  mappings:
  - name: id
    pk: True
  - name: http_method
    value: ${ m["http_method"] }
    type: String
- !!python/object:cubetl.olap.sql.DimensionMapper
  entity: !ref cubetl.http.status
  table: http_status
  connection: !ref example.sql.connection
  lookup_cols: code
  mappings:
  - name: code
    pk: True
    type: Integer
    value: ${ m["status_code"] }
  - name: description
    value: ${ m["status_description"] }
    type: String
- !!python/object:cubetl.olap.sql.FactMapper
  entity: !ref cubetl.webserver.request
  table: web_request
  connection: !ref example.sql.connection
  store_mode: insert
  lookup_cols: id
  mappings:
  - name: id
    pk: True

---

!!python/object:cubetl.flow.Chain
id: example.webserverlog
steps:
- !ref example.sql.transaction
- !!python/object:cubetl.fs.FileLineReader
  path: examples/apache2-access.log
- !ref cubetl.webserver.parse_apache_combined
- !!python/object:cubetl.script.Eval
  eval:
  - name: datetime
    value: ${ text.extract_date(m['date_string']) }
- !!python/object:cubetl.geoip.GeoIPFromAddress
  data: ${ m['address'] }
- !!python/object:cubetl.script.Eval
  eval:
  - name: http_method
    value: ${ m['verb'].split(' ')[0] }
  - name: path
    value: ${ " ".join(m['verb'].split(' ')[1:-1]).split('?')[0] }
  - name: path1
    value: ${ m['path'].split('/')[1] if len(m['path'].split('/')) > 2 else "" }
  - name: path2
    value: ${ m['path'].split('/')[2] if len(m['path'].split('/')) > 2 else "" }
  - name: path3
    value: ${ m['path'].split('/')[3] if len(m['path'].split('/')) > 3 else "" }
  - name: path4
    value: ${ "/".join(m['path'].split('/')[4:]) if len(m['path'].split('/')) > 4 else "" }
  - name: protocol
    value: ${ m['verb'].split(' ')[-1] }
- !!python/object:cubetl.table.cache.CachedTableLookup
  table: !ref cubetl.http.status.table
  lookup:
    status_code: ${ m["status_code"] }
  default:
  - status_description: Unknown
  mappings:
  - name: status_description
    value: ${ status_description }
- !ref cubetl.util.print
- !!python/object:cubetl.olap.Store
  entity: !ref cubetl.webserver.request
  mapper: !ref cubetl.webserver.request.olapmapper
- !ref cubetl.util.logperformance

# internal/external referer?
# organic/etc referer?
# search referer + search phrases facts + search terms facts
# bots
# mime types/grouped +  /   file transfers flag
# response size (small, medium, large...)
# first visit, last visit, entry pages/exit pages
# visits / hists - track each user entry (ip+time /  no-referer??)
# remove params from URL in process
# tracking javascript ??? (screen size, browser size, support, sessions, etc)
# IP PTR -> SOA authority ( IP owner? )

---

!!python/object:cubetl.cubes.Cubes10ModelWriter
id: example.webserver.export-cubes
olapmapper: !ref cubetl.webserver.request.olapmapper

---
